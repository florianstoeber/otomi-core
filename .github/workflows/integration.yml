# yaml-language-server: $schema=https://raw.githubusercontent.com/json-schema-org/json-schema-spec/draft-07/schema.json
name: Integrate helmfile releases
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'
env:
  CACHE_REGISTRY: ghcr.io
  CACHE_REPO: redkubes/otomi-core
  REPO: otomi/core
  GIT_USER: redkubesbot
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_OTOMI_TOKEN }}
  KIND_TAG: v1.19.0

jobs:
  kind:
    runs-on: ubuntu-latest
    container:
      image: otomi/tools:kind
      options: --user=app:app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ env.GIT_PASSWORD }}
      - run: echo "/home/app/tools" >> $GITHUB_PATH
      # Important info: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#docker-container-filesystem
      - name: K8s in Docker
        continue-on-error: true
        run: |
          export KUBECONFIG=$PWD/kind/kubeconfig
          export KIND_EXPERIMENTAL_DOCKER_NETWORK=${{ job.container.network }}
          export AZURE_CLIENT_SECRET=bla
          export AZURE_CLIENT_ID=bla

          kind create cluster \
            --name kind \
            --kubeconfig $KUBECONFIG \
            --image kindest/node:${{ env.KIND_TAG }} \
            --config=./kind/config.yaml

          [ -n "$KIND_EXPERIMENTAL_DOCKER_NETWORK" ] && \
            kubectl config set-cluster kind-kind --server=https://kind-control-plane:6443

          export METALLB_SUBNET=$(docker network inspect -f '{{ (index .IPAM.Config 0).Subnet }}' kind)

          helmfile -f helmfile.d/helmfile-01.kind.yaml apply 

          export EX_DNS_IP=$(kubectl get services/external-dns -n kind -o go-template='{{(.spec.clusterIP)}}');echo EX_DNS_IP=$EX_DNS_IP
          export DOMAIN_SUFFIX=$(cat kind/env/cluster.yaml | grep domainSuffix | awk '{print $2}')

          kubectl get cm coredns -n kube-system -o yaml | \
            sed -e "s/|/&\n\    $DOMAIN_SUFFIX:53 {\n\
                errors \n\
                cache 30 \n\
                forward . $EX_DNS_IP \n\
              }/" | kubectl apply -f - >/dev/null

          chmod +r $KUBECONFIG
          mkdir -p ./env/env
          cp -r ./kind/env/ ./env/

          npm set-script prepare ""
          npm i typescript@4.3.4
          npm run compile
          /usr/bin/node --experimental-specifier-resolution=node ./dist/otomi.js -- apply

      # - run: kind delete cluster --name kind
